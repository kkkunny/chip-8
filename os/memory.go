package os

import (
	"io"

	stlerr "github.com/kkkunny/stl/error"
)

// 字符集
var fontset = [80]uint8{
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80, // F
}

type memory struct {
	data [4096]uint8
}

func newMemory() *memory {
	m := &memory{}
	m.Reset()
	return m
}

func (m *memory) Reset() {
	m.data = [4096]uint8{}
	copy(m.data[:], fontset[:])
}

func (m *memory) Load(r io.Reader, size uint) error {
	_, err := stlerr.ErrorWith(r.Read(m.data[0x200 : 0x200+size]))
	return err
}

func (m *memory) Index(b, e uint) []byte {
	return m.data[b:e]
}

func (m *memory) IndexByN(b, n uint) []byte {
	return m.data[b : b+n]
}

func (m *memory) Set(i uint, v uint8) {
	m.data[i] = v
}

func (m *memory) Get(i uint) uint8 {
	return m.data[i]
}
